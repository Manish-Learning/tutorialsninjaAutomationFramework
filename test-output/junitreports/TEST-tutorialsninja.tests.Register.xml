<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Manish_PC" failures="0" tests="27" name="tutorialsninja.tests.Register" time="-1752131968.000" errors="1" timestamp="2025-07-10T12:49:38 IST" skipped="26">
  <testcase classname="tutorialsninja.tests.Register" name="setUP" time="-1752131968.000">
    <error message="
Can inject only one of &lt;ITestContext, XmlTest, Method, Object[], ITestResult&gt; into a @BeforeMethod annotated setUP.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setUP.
For more information on native dependency injection please refer to https://testng.org/#_dependency_injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:442)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:347)
at org.testng.internal.Parameters.createParameters(Parameters.java:699)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:163)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:313)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
    </error>
  </testcase> <!-- setUP -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisterAccout" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisterAccout -->
  <testcase classname="tutorialsninja.tests.Register" name="VerifyRegisterAccountwithAllFields" time="0.000">
    <skipped/>
  </testcase> <!-- VerifyRegisterAccountwithAllFields -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegistringAccountWithoutFillFields" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegistringAccountWithoutFillFields -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountBySubscribingToNewsletter" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountBySubscribingToNewsletter -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountBySayingNoToNewsletter" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountBySayingNoToNewsletter -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyNavigatingToRegisterAccountUsingMultipleWay" time="0.000">
    <skipped/>
  </testcase> <!-- verifyNavigatingToRegisterAccountUsingMultipleWay -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountByProvidingMismatchingPasswords" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountByProvidingMismatchingPasswords -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegistringAccountUsingExistingEmail" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegistringAccountUsingExistingEmail -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountUsingInvalidEmail" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingInvalidEmail -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisterAccountByProvidingInvalidTelephoneNumber" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisterAccountByProvidingInvalidTelephoneNumber -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountUsingKeyboardKeys" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingKeyboardKeys -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyPlaceHoldersOfTextFieldsInRegisterAccountPage" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPlaceHoldersOfTextFieldsInRegisterAccountPage -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyMandatoryFieldsSymbolAndColorInRegisterAccountPage" time="0.000">
    <skipped/>
  </testcase> <!-- verifyMandatoryFieldsSymbolAndColorInRegisterAccountPage -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountWithOnlySpaces" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithOnlySpaces -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountAndCheckingPasswordComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountAndCheckingPasswordComplexityStandards -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountAndCheckingPasswordComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountAndCheckingPasswordComplexityStandards -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountAndCheckingPasswordComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountAndCheckingPasswordComplexityStandards -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountAndCheckingPasswordComplexityStandards" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountAndCheckingPasswordComplexityStandards -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountAndCheckingPasswordComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountAndCheckingPasswordComplexityStandards -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountFieldsHeightWidthAligment" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountFieldsHeightWidthAligment -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyLeadingAndTrailingSpacesWhileRegisteringAccount" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLeadingAndTrailingSpacesWhileRegisteringAccount -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountWithoutPrivacyPolicySelection" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutPrivacyPolicySelection -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyWorkingOfEveryLinkOnRegisterAccountPage" time="0.000">
    <skipped/>
  </testcase> <!-- verifyWorkingOfEveryLinkOnRegisterAccountPage -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountWithoutEnteringPasswordIntoPasswordConfirmField" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutEnteringPasswordIntoPasswordConfirmField -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyBreadcrumbURLHeadingTitleOfRegisterAccountPage" time="0.000">
    <skipped/>
  </testcase> <!-- verifyBreadcrumbURLHeadingTitleOfRegisterAccountPage -->
  <testcase classname="tutorialsninja.tests.Register" name="verifyRegisteringAccountInDifferentTestEnvironments" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountInDifferentTestEnvironments -->
</testsuite> <!-- tutorialsninja.tests.Register -->
